{"version":3,"sources":["components/Header.jsx","components/ImageCard.jsx","utils/imageUtil.js","components/ImageModal.jsx","components/ImageList.jsx","services/imageService.js","App.jsx","reportWebVitals.js","index.js"],"names":["Header","handleSearch","useState","previousSearchQueries","setPreviousSearchQueries","searchValue","setSearchValue","showSuggestions","setShowSuggestions","Navbar","bg","expand","fixed","Container","Brand","href","Toggle","aria-controls","Collapse","id","Form","className","FormControl","type","placeholder","aria-label","value","onChange","e","target","onFocus","searchQueries","JSON","parse","localStorage","getItem","filter","map","query","onClick","doSearch","ImageCard","image","handleShow","imageUrl","server","secret","getImageUrl","Card","style","width","Img","variant","src","height","ImageModal","showModal","handleClose","Modal","show","onHide","centered","contentClassName","Body","Image","rounded","Footer","Button","ImageList","images","setShowModal","setImageUrl","fluid","Row","index","Col","sm","getImages","page","axios","get","process","then","result","photos","data","photo","hasMore","pages","searchImages","App","setImages","searchQuery","setSearchQuery","setHasMore","useEffect","deboundSearch","setTimeout","clearTimeout","addToLocalStorage","previousSearches","includes","push","setItem","stringify","pageStart","loadMore","setImagesFromResponse","loader","Spinner","animation","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50e08e46.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  Navbar,\n  Container,\n  Form,\n  FormControl\n} from 'react-bootstrap'\nimport PropTypes from 'prop-types'\n\nconst Header = ({ handleSearch }) => {\n  const [previousSearchQueries, setPreviousSearchQueries] = useState([])\n  const [searchValue, setSearchValue] = useState('')\n  const [showSuggestions, setShowSuggestions] = useState(false)\n  const loadSearchQueries = () => {\n    let searchQueries =\n      JSON.parse(localStorage.getItem('searches')) || []\n    searchQueries = searchQueries.filter(\n      (value) => value !== ''\n    )\n    setPreviousSearchQueries(searchQueries)\n    setShowSuggestions(true)\n  }\n\n  const doSearch = (query) => {\n    setSearchValue(query)\n    handleSearch(query)\n    setShowSuggestions(false)\n  }\n\n  const handleChange = (e) => {\n    setSearchValue(e.target.value)\n    handleSearch(searchValue)\n  }\n\n  return (\n    <>\n    <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\n      <Container>\n        <Navbar.Brand href=\"#home\">Search Images</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Form className=\"d-flex flex-fill\">\n            <FormControl\n              type=\"search\"\n              placeholder=\"Search\"\n              className=\"mr-2\"\n              aria-label=\"Search\"\n              value={searchValue}\n              onChange={handleChange}\n              onFocus={loadSearchQueries}\n            />\n          </Form>\n        </Navbar.Collapse>\n      </Container>\n      {showSuggestions && <div className=\"suggestions\">\n          {previousSearchQueries.map(query => <div key={query} onClick={() => doSearch(query)}>{query}</div>)}\n        </div>}\n    </Navbar>\n    </>\n  )\n}\n\nHeader.propTypes = {\n  handleSearch: PropTypes.func.isRequired\n}\n\nexport default Header\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { getImageUrl } from '../utils/imageUtil'\nimport PropTypes from 'prop-types'\n\nconst ImageCard = ({ image, handleShow }) => {\n  const imageUrl = getImageUrl(image)\n  return (\n    <Card style={{ width: '18rem' }} onClick={() => handleShow(imageUrl)} >\n      <Card.Img variant=\"top\" src={imageUrl} style={{ height: '400px', width: '400px' }}/>\n    </Card>\n  )\n}\n\nImageCard.propTypes = {\n  image: PropTypes.object.isRequired,\n  handleShow: PropTypes.func.isRequired\n}\n\nexport default ImageCard\n","export const getImageUrl = (image) => {\n  return `https://live.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Modal, Button, Image } from 'react-bootstrap'\n\nconst ImageModal = ({ showModal, handleClose, imageUrl }) => {\n  return (\n        <Modal show={showModal} onHide={handleClose} centered contentClassName=\"content-size-auto\">\n        <Modal.Body className=\"text-center\">\n            <Image src={imageUrl} rounded/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n  )\n}\n\nImageModal.propTypes = {\n  showModal: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  imageUrl: PropTypes.string.isRequired\n}\n\nexport default ImageModal\n","import React, { useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport ImageCard from './ImageCard'\nimport ImageModal from './ImageModal'\nimport PropTypes from 'prop-types'\n\nconst ImageList = ({ images }) => {\n  const [showModal, setShowModal] = useState(false)\n  const [imageUrl, setImageUrl] = useState('')\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = (imageUrl) => {\n    setImageUrl(imageUrl)\n    setShowModal(true)\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n          {images.map((image, index) => <Col sm={4} key={`${image.id}_${index}`}>\n              <ImageCard image={image} handleShow={handleShow}/>\n          </Col>)}\n      </Row>\n      <ImageModal showModal={showModal} handleClose={handleClose} imageUrl={imageUrl}/>\n    </Container>\n  )\n}\n\nImageList.propTypes = {\n  images: PropTypes.array.isRequired\n}\n\nexport default ImageList\n","import axios from 'axios'\n\nexport const getImages = (page) => {\n  return axios\n    .get(\n        `${process.env.REACT_APP_API_URL}?method=flickr.photos.getRecent&api_key=${process.env.REACT_APP_API_KEY}&format=json&nojsoncallback=1&per_page=${process.env.REACT_APP_PER_PAGE}&page=${page}`\n    )\n    .then((result) => {\n      return {\n        photos: result.data.photos.photo,\n        // eslint-disable-next-line eqeqeq\n        hasMore: page != result.data.photos.pages\n      }\n    })\n}\n\nexport const searchImages = (query, page) => {\n  return axios\n    .get(\n        `${process.env.REACT_APP_API_URL}?method=flickr.photos.search&api_key=${process.env.REACT_APP_API_KEY}&text=${query}&format=json&nojsoncallback=1&per_page=${process.env.REACT_APP_PER_PAGE}&page=${page}`\n    )\n    .then((result) => {\n      return {\n        photos: result.data.photos.photo,\n        // eslint-disable-next-line eqeqeq\n        hasMore: page != result.data.photos.pages\n      }\n    })\n}\n","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport Header from './components/Header'\nimport ImageList from './components/ImageList'\nimport { getImages, searchImages } from './services/imageService'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { Spinner } from 'react-bootstrap'\n\nfunction App () {\n  const [images, setImages] = useState([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [hasMore, setHasMore] = useState(true)\n\n  useEffect(() => {\n    const deboundSearch = setTimeout(() => {\n      setImages([])\n    }, 1000)\n\n    return () => clearTimeout(deboundSearch)\n  }, [searchQuery])\n\n  const addToLocalStorage = () => {\n    const previousSearches = JSON.parse(localStorage.getItem('searches')) || []\n    if (!previousSearches.includes(searchQuery)) {\n      previousSearches.push(searchQuery)\n      localStorage.setItem('searches', JSON.stringify(previousSearches))\n    }\n  }\n\n  const setImagesFromResponse = (page = 0) => {\n    addToLocalStorage()\n    if (searchQuery) {\n      searchImages(searchQuery, page).then((result) => {\n        setImages([...images, ...result.photos])\n        setHasMore(result.hasMore)\n      })\n    } else {\n      getImages(page).then((result) => {\n        setImages([...images, ...result.photos])\n        setHasMore(result.hasMore)\n      })\n    }\n  }\n\n  const handleSearch = (query) => {\n    setSearchQuery(query)\n  }\n\n  const loadMore = (page) => {\n    if (!hasMore) return\n    setImagesFromResponse(page)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header handleSearch={handleSearch} />\n        <InfiniteScroll\n        className=\"m-5\"\n        key={searchQuery}\n        pageStart={0}\n        loadMore={loadMore}\n        hasMore={hasMore}\n        loader={\n          <Spinner key={0} animation=\"border\" role=\"status\" className=\"m-4\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        }\n      >\n        <ImageList images={images} />\n      </InfiniteScroll>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}